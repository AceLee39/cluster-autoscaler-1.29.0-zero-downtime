// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/request"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/response"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyImageAttributeCommon = "ModifyImageAttribute"

// ModifyImageAttributeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyImageAttributeCommon operation. The "output" return
// value will be populated with the ModifyImageAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyImageAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyImageAttributeCommon Send returns without error.
//
// See ModifyImageAttributeCommon for more information on using the ModifyImageAttributeCommon
// API call, and error handling.
//
//	// Example sending a request using the ModifyImageAttributeCommonRequest method.
//	req, resp := client.ModifyImageAttributeCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) ModifyImageAttributeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyImageAttributeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyImageAttributeCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyImageAttributeCommon for usage and error information.
func (c *ECS) ModifyImageAttributeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyImageAttributeCommonRequest(input)
	return out, req.Send()
}

// ModifyImageAttributeCommonWithContext is the same as ModifyImageAttributeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyImageAttributeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyImageAttributeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyImageAttributeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyImageAttribute = "ModifyImageAttribute"

// ModifyImageAttributeRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyImageAttribute operation. The "output" return
// value will be populated with the ModifyImageAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyImageAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyImageAttributeCommon Send returns without error.
//
// See ModifyImageAttribute for more information on using the ModifyImageAttribute
// API call, and error handling.
//
//	// Example sending a request using the ModifyImageAttributeRequest method.
//	req, resp := client.ModifyImageAttributeRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) ModifyImageAttributeRequest(input *ModifyImageAttributeInput) (req *request.Request, output *ModifyImageAttributeOutput) {
	op := &request.Operation{
		Name:       opModifyImageAttribute,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyImageAttributeInput{}
	}

	output = &ModifyImageAttributeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyImageAttribute API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyImageAttribute for usage and error information.
func (c *ECS) ModifyImageAttribute(input *ModifyImageAttributeInput) (*ModifyImageAttributeOutput, error) {
	req, out := c.ModifyImageAttributeRequest(input)
	return out, req.Send()
}

// ModifyImageAttributeWithContext is the same as ModifyImageAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyImageAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyImageAttributeWithContext(ctx volcengine.Context, input *ModifyImageAttributeInput, opts ...request.Option) (*ModifyImageAttributeOutput, error) {
	req, out := c.ModifyImageAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyImageAttributeInput struct {
	_ struct{} `type:"structure"`

	BootMode *string `type:"string"`

	Description *string `type:"string"`

	ImageId *string `type:"string"`

	ImageName *string `type:"string"`
}

// String returns the string representation
func (s ModifyImageAttributeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyImageAttributeInput) GoString() string {
	return s.String()
}

// SetBootMode sets the BootMode field's value.
func (s *ModifyImageAttributeInput) SetBootMode(v string) *ModifyImageAttributeInput {
	s.BootMode = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ModifyImageAttributeInput) SetDescription(v string) *ModifyImageAttributeInput {
	s.Description = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *ModifyImageAttributeInput) SetImageId(v string) *ModifyImageAttributeInput {
	s.ImageId = &v
	return s
}

// SetImageName sets the ImageName field's value.
func (s *ModifyImageAttributeInput) SetImageName(v string) *ModifyImageAttributeInput {
	s.ImageName = &v
	return s
}

type ModifyImageAttributeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyImageAttributeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyImageAttributeOutput) GoString() string {
	return s.String()
}
