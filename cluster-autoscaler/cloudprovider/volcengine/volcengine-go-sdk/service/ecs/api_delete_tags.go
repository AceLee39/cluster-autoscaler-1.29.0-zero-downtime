// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/request"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/response"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteTagsCommon = "DeleteTags"

// DeleteTagsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteTagsCommon operation. The "output" return
// value will be populated with the DeleteTagsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTagsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTagsCommon Send returns without error.
//
// See DeleteTagsCommon for more information on using the DeleteTagsCommon
// API call, and error handling.
//
//	// Example sending a request using the DeleteTagsCommonRequest method.
//	req, resp := client.DeleteTagsCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) DeleteTagsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteTagsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTagsCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DeleteTagsCommon for usage and error information.
func (c *ECS) DeleteTagsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteTagsCommonRequest(input)
	return out, req.Send()
}

// DeleteTagsCommonWithContext is the same as DeleteTagsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTagsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DeleteTagsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteTagsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteTags = "DeleteTags"

// DeleteTagsRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteTags operation. The "output" return
// value will be populated with the DeleteTagsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTagsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTagsCommon Send returns without error.
//
// See DeleteTags for more information on using the DeleteTags
// API call, and error handling.
//
//	// Example sending a request using the DeleteTagsRequest method.
//	req, resp := client.DeleteTagsRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) DeleteTagsRequest(input *DeleteTagsInput) (req *request.Request, output *DeleteTagsOutput) {
	op := &request.Operation{
		Name:       opDeleteTags,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteTagsInput{}
	}

	output = &DeleteTagsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTags API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DeleteTags for usage and error information.
func (c *ECS) DeleteTags(input *DeleteTagsInput) (*DeleteTagsOutput, error) {
	req, out := c.DeleteTagsRequest(input)
	return out, req.Send()
}

// DeleteTagsWithContext is the same as DeleteTags with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTags for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DeleteTagsWithContext(ctx volcengine.Context, input *DeleteTagsInput, opts ...request.Option) (*DeleteTagsOutput, error) {
	req, out := c.DeleteTagsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteTagsInput struct {
	_ struct{} `type:"structure"`

	ResourceIds []*string `type:"list"`

	ResourceType *string `type:"string"`

	TagKeys []*string `type:"list"`
}

// String returns the string representation
func (s DeleteTagsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTagsInput) GoString() string {
	return s.String()
}

// SetResourceIds sets the ResourceIds field's value.
func (s *DeleteTagsInput) SetResourceIds(v []*string) *DeleteTagsInput {
	s.ResourceIds = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *DeleteTagsInput) SetResourceType(v string) *DeleteTagsInput {
	s.ResourceType = &v
	return s
}

// SetTagKeys sets the TagKeys field's value.
func (s *DeleteTagsInput) SetTagKeys(v []*string) *DeleteTagsInput {
	s.TagKeys = v
	return s
}

type DeleteTagsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OperationDetails []*OperationDetailForDeleteTagsOutput `type:"list"`
}

// String returns the string representation
func (s DeleteTagsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTagsOutput) GoString() string {
	return s.String()
}

// SetOperationDetails sets the OperationDetails field's value.
func (s *DeleteTagsOutput) SetOperationDetails(v []*OperationDetailForDeleteTagsOutput) *DeleteTagsOutput {
	s.OperationDetails = v
	return s
}

type ErrorForDeleteTagsOutput struct {
	_ struct{} `type:"structure"`

	Code *string `type:"string"`

	Message *string `type:"string"`
}

// String returns the string representation
func (s ErrorForDeleteTagsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForDeleteTagsOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForDeleteTagsOutput) SetCode(v string) *ErrorForDeleteTagsOutput {
	s.Code = &v
	return s
}

// SetMessage sets the Message field's value.
func (s *ErrorForDeleteTagsOutput) SetMessage(v string) *ErrorForDeleteTagsOutput {
	s.Message = &v
	return s
}

type OperationDetailForDeleteTagsOutput struct {
	_ struct{} `type:"structure"`

	Error *ErrorForDeleteTagsOutput `type:"structure"`

	ResourceId *string `type:"string"`
}

// String returns the string representation
func (s OperationDetailForDeleteTagsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OperationDetailForDeleteTagsOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *OperationDetailForDeleteTagsOutput) SetError(v *ErrorForDeleteTagsOutput) *OperationDetailForDeleteTagsOutput {
	s.Error = v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *OperationDetailForDeleteTagsOutput) SetResourceId(v string) *OperationDetailForDeleteTagsOutput {
	s.ResourceId = &v
	return s
}
