// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/request"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/response"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyImageSharePermissionCommon = "ModifyImageSharePermission"

// ModifyImageSharePermissionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyImageSharePermissionCommon operation. The "output" return
// value will be populated with the ModifyImageSharePermissionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyImageSharePermissionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyImageSharePermissionCommon Send returns without error.
//
// See ModifyImageSharePermissionCommon for more information on using the ModifyImageSharePermissionCommon
// API call, and error handling.
//
//	// Example sending a request using the ModifyImageSharePermissionCommonRequest method.
//	req, resp := client.ModifyImageSharePermissionCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) ModifyImageSharePermissionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyImageSharePermissionCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyImageSharePermissionCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyImageSharePermissionCommon for usage and error information.
func (c *ECS) ModifyImageSharePermissionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyImageSharePermissionCommonRequest(input)
	return out, req.Send()
}

// ModifyImageSharePermissionCommonWithContext is the same as ModifyImageSharePermissionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyImageSharePermissionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyImageSharePermissionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyImageSharePermissionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyImageSharePermission = "ModifyImageSharePermission"

// ModifyImageSharePermissionRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyImageSharePermission operation. The "output" return
// value will be populated with the ModifyImageSharePermissionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyImageSharePermissionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyImageSharePermissionCommon Send returns without error.
//
// See ModifyImageSharePermission for more information on using the ModifyImageSharePermission
// API call, and error handling.
//
//	// Example sending a request using the ModifyImageSharePermissionRequest method.
//	req, resp := client.ModifyImageSharePermissionRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) ModifyImageSharePermissionRequest(input *ModifyImageSharePermissionInput) (req *request.Request, output *ModifyImageSharePermissionOutput) {
	op := &request.Operation{
		Name:       opModifyImageSharePermission,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyImageSharePermissionInput{}
	}

	output = &ModifyImageSharePermissionOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyImageSharePermission API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyImageSharePermission for usage and error information.
func (c *ECS) ModifyImageSharePermission(input *ModifyImageSharePermissionInput) (*ModifyImageSharePermissionOutput, error) {
	req, out := c.ModifyImageSharePermissionRequest(input)
	return out, req.Send()
}

// ModifyImageSharePermissionWithContext is the same as ModifyImageSharePermission with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyImageSharePermission for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyImageSharePermissionWithContext(ctx volcengine.Context, input *ModifyImageSharePermissionInput, opts ...request.Option) (*ModifyImageSharePermissionOutput, error) {
	req, out := c.ModifyImageSharePermissionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyImageSharePermissionInput struct {
	_ struct{} `type:"structure"`

	AddAccounts []*string `type:"list"`

	ImageId *string `type:"string"`

	RemoveAccounts []*string `type:"list"`
}

// String returns the string representation
func (s ModifyImageSharePermissionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyImageSharePermissionInput) GoString() string {
	return s.String()
}

// SetAddAccounts sets the AddAccounts field's value.
func (s *ModifyImageSharePermissionInput) SetAddAccounts(v []*string) *ModifyImageSharePermissionInput {
	s.AddAccounts = v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *ModifyImageSharePermissionInput) SetImageId(v string) *ModifyImageSharePermissionInput {
	s.ImageId = &v
	return s
}

// SetRemoveAccounts sets the RemoveAccounts field's value.
func (s *ModifyImageSharePermissionInput) SetRemoveAccounts(v []*string) *ModifyImageSharePermissionInput {
	s.RemoveAccounts = v
	return s
}

type ModifyImageSharePermissionOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyImageSharePermissionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyImageSharePermissionOutput) GoString() string {
	return s.String()
}
