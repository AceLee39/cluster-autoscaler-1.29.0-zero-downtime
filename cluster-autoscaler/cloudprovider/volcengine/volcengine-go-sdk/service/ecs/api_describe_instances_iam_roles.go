// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/request"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/response"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeInstancesIamRolesCommon = "DescribeInstancesIamRoles"

// DescribeInstancesIamRolesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeInstancesIamRolesCommon operation. The "output" return
// value will be populated with the DescribeInstancesIamRolesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeInstancesIamRolesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeInstancesIamRolesCommon Send returns without error.
//
// See DescribeInstancesIamRolesCommon for more information on using the DescribeInstancesIamRolesCommon
// API call, and error handling.
//
//	// Example sending a request using the DescribeInstancesIamRolesCommonRequest method.
//	req, resp := client.DescribeInstancesIamRolesCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) DescribeInstancesIamRolesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeInstancesIamRolesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeInstancesIamRolesCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeInstancesIamRolesCommon for usage and error information.
func (c *ECS) DescribeInstancesIamRolesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeInstancesIamRolesCommonRequest(input)
	return out, req.Send()
}

// DescribeInstancesIamRolesCommonWithContext is the same as DescribeInstancesIamRolesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstancesIamRolesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeInstancesIamRolesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeInstancesIamRolesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeInstancesIamRoles = "DescribeInstancesIamRoles"

// DescribeInstancesIamRolesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeInstancesIamRoles operation. The "output" return
// value will be populated with the DescribeInstancesIamRolesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeInstancesIamRolesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeInstancesIamRolesCommon Send returns without error.
//
// See DescribeInstancesIamRoles for more information on using the DescribeInstancesIamRoles
// API call, and error handling.
//
//	// Example sending a request using the DescribeInstancesIamRolesRequest method.
//	req, resp := client.DescribeInstancesIamRolesRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) DescribeInstancesIamRolesRequest(input *DescribeInstancesIamRolesInput) (req *request.Request, output *DescribeInstancesIamRolesOutput) {
	op := &request.Operation{
		Name:       opDescribeInstancesIamRoles,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeInstancesIamRolesInput{}
	}

	output = &DescribeInstancesIamRolesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeInstancesIamRoles API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeInstancesIamRoles for usage and error information.
func (c *ECS) DescribeInstancesIamRoles(input *DescribeInstancesIamRolesInput) (*DescribeInstancesIamRolesOutput, error) {
	req, out := c.DescribeInstancesIamRolesRequest(input)
	return out, req.Send()
}

// DescribeInstancesIamRolesWithContext is the same as DescribeInstancesIamRoles with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstancesIamRoles for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeInstancesIamRolesWithContext(ctx volcengine.Context, input *DescribeInstancesIamRolesInput, opts ...request.Option) (*DescribeInstancesIamRolesOutput, error) {
	req, out := c.DescribeInstancesIamRolesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeInstancesIamRolesInput struct {
	_ struct{} `type:"structure"`

	InstanceIds []*string `type:"list"`

	MaxResults *int32 `type:"int32"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstancesIamRolesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancesIamRolesInput) GoString() string {
	return s.String()
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *DescribeInstancesIamRolesInput) SetInstanceIds(v []*string) *DescribeInstancesIamRolesInput {
	s.InstanceIds = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeInstancesIamRolesInput) SetMaxResults(v int32) *DescribeInstancesIamRolesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeInstancesIamRolesInput) SetNextToken(v string) *DescribeInstancesIamRolesInput {
	s.NextToken = &v
	return s
}

type DescribeInstancesIamRolesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	InstancesIamRoles []*InstancesIamRoleForDescribeInstancesIamRolesOutput `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeInstancesIamRolesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancesIamRolesOutput) GoString() string {
	return s.String()
}

// SetInstancesIamRoles sets the InstancesIamRoles field's value.
func (s *DescribeInstancesIamRolesOutput) SetInstancesIamRoles(v []*InstancesIamRoleForDescribeInstancesIamRolesOutput) *DescribeInstancesIamRolesOutput {
	s.InstancesIamRoles = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeInstancesIamRolesOutput) SetNextToken(v string) *DescribeInstancesIamRolesOutput {
	s.NextToken = &v
	return s
}

type InstancesIamRoleForDescribeInstancesIamRolesOutput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`

	RoleNames []*string `type:"list"`
}

// String returns the string representation
func (s InstancesIamRoleForDescribeInstancesIamRolesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstancesIamRoleForDescribeInstancesIamRolesOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstancesIamRoleForDescribeInstancesIamRolesOutput) SetInstanceId(v string) *InstancesIamRoleForDescribeInstancesIamRolesOutput {
	s.InstanceId = &v
	return s
}

// SetRoleNames sets the RoleNames field's value.
func (s *InstancesIamRoleForDescribeInstancesIamRolesOutput) SetRoleNames(v []*string) *InstancesIamRoleForDescribeInstancesIamRolesOutput {
	s.RoleNames = v
	return s
}
