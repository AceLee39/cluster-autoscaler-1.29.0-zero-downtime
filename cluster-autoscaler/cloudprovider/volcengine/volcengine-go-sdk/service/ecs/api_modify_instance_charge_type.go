// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/request"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/response"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyInstanceChargeTypeCommon = "ModifyInstanceChargeType"

// ModifyInstanceChargeTypeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceChargeTypeCommon operation. The "output" return
// value will be populated with the ModifyInstanceChargeTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceChargeTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceChargeTypeCommon Send returns without error.
//
// See ModifyInstanceChargeTypeCommon for more information on using the ModifyInstanceChargeTypeCommon
// API call, and error handling.
//
//	// Example sending a request using the ModifyInstanceChargeTypeCommonRequest method.
//	req, resp := client.ModifyInstanceChargeTypeCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) ModifyInstanceChargeTypeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyInstanceChargeTypeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstanceChargeTypeCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyInstanceChargeTypeCommon for usage and error information.
func (c *ECS) ModifyInstanceChargeTypeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceChargeTypeCommonRequest(input)
	return out, req.Send()
}

// ModifyInstanceChargeTypeCommonWithContext is the same as ModifyInstanceChargeTypeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceChargeTypeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyInstanceChargeTypeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceChargeTypeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstanceChargeType = "ModifyInstanceChargeType"

// ModifyInstanceChargeTypeRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceChargeType operation. The "output" return
// value will be populated with the ModifyInstanceChargeTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceChargeTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceChargeTypeCommon Send returns without error.
//
// See ModifyInstanceChargeType for more information on using the ModifyInstanceChargeType
// API call, and error handling.
//
//	// Example sending a request using the ModifyInstanceChargeTypeRequest method.
//	req, resp := client.ModifyInstanceChargeTypeRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) ModifyInstanceChargeTypeRequest(input *ModifyInstanceChargeTypeInput) (req *request.Request, output *ModifyInstanceChargeTypeOutput) {
	op := &request.Operation{
		Name:       opModifyInstanceChargeType,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyInstanceChargeTypeInput{}
	}

	output = &ModifyInstanceChargeTypeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstanceChargeType API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyInstanceChargeType for usage and error information.
func (c *ECS) ModifyInstanceChargeType(input *ModifyInstanceChargeTypeInput) (*ModifyInstanceChargeTypeOutput, error) {
	req, out := c.ModifyInstanceChargeTypeRequest(input)
	return out, req.Send()
}

// ModifyInstanceChargeTypeWithContext is the same as ModifyInstanceChargeType with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceChargeType for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyInstanceChargeTypeWithContext(ctx volcengine.Context, input *ModifyInstanceChargeTypeInput, opts ...request.Option) (*ModifyInstanceChargeTypeOutput, error) {
	req, out := c.ModifyInstanceChargeTypeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyInstanceChargeTypeInput struct {
	_ struct{} `type:"structure"`

	AutoPay *bool `type:"boolean"`

	ClientToken *string `type:"string"`

	IncludeDataVolumes *bool `type:"boolean"`

	InstanceChargeType *string `type:"string"`

	InstanceIds []*string `type:"list"`

	Period *int32 `type:"int32"`

	PeriodUnit *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstanceChargeTypeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceChargeTypeInput) GoString() string {
	return s.String()
}

// SetAutoPay sets the AutoPay field's value.
func (s *ModifyInstanceChargeTypeInput) SetAutoPay(v bool) *ModifyInstanceChargeTypeInput {
	s.AutoPay = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *ModifyInstanceChargeTypeInput) SetClientToken(v string) *ModifyInstanceChargeTypeInput {
	s.ClientToken = &v
	return s
}

// SetIncludeDataVolumes sets the IncludeDataVolumes field's value.
func (s *ModifyInstanceChargeTypeInput) SetIncludeDataVolumes(v bool) *ModifyInstanceChargeTypeInput {
	s.IncludeDataVolumes = &v
	return s
}

// SetInstanceChargeType sets the InstanceChargeType field's value.
func (s *ModifyInstanceChargeTypeInput) SetInstanceChargeType(v string) *ModifyInstanceChargeTypeInput {
	s.InstanceChargeType = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *ModifyInstanceChargeTypeInput) SetInstanceIds(v []*string) *ModifyInstanceChargeTypeInput {
	s.InstanceIds = v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ModifyInstanceChargeTypeInput) SetPeriod(v int32) *ModifyInstanceChargeTypeInput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *ModifyInstanceChargeTypeInput) SetPeriodUnit(v string) *ModifyInstanceChargeTypeInput {
	s.PeriodUnit = &v
	return s
}

type ModifyInstanceChargeTypeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OrderId *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstanceChargeTypeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceChargeTypeOutput) GoString() string {
	return s.String()
}

// SetOrderId sets the OrderId field's value.
func (s *ModifyInstanceChargeTypeOutput) SetOrderId(v string) *ModifyInstanceChargeTypeOutput {
	s.OrderId = &v
	return s
}
