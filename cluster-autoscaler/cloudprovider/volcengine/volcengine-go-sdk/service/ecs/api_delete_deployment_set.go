// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/request"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/response"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteDeploymentSetCommon = "DeleteDeploymentSet"

// DeleteDeploymentSetCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteDeploymentSetCommon operation. The "output" return
// value will be populated with the DeleteDeploymentSetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDeploymentSetCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDeploymentSetCommon Send returns without error.
//
// See DeleteDeploymentSetCommon for more information on using the DeleteDeploymentSetCommon
// API call, and error handling.
//
//	// Example sending a request using the DeleteDeploymentSetCommonRequest method.
//	req, resp := client.DeleteDeploymentSetCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) DeleteDeploymentSetCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteDeploymentSetCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteDeploymentSetCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DeleteDeploymentSetCommon for usage and error information.
func (c *ECS) DeleteDeploymentSetCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteDeploymentSetCommonRequest(input)
	return out, req.Send()
}

// DeleteDeploymentSetCommonWithContext is the same as DeleteDeploymentSetCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDeploymentSetCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DeleteDeploymentSetCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteDeploymentSetCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteDeploymentSet = "DeleteDeploymentSet"

// DeleteDeploymentSetRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteDeploymentSet operation. The "output" return
// value will be populated with the DeleteDeploymentSetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDeploymentSetCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDeploymentSetCommon Send returns without error.
//
// See DeleteDeploymentSet for more information on using the DeleteDeploymentSet
// API call, and error handling.
//
//	// Example sending a request using the DeleteDeploymentSetRequest method.
//	req, resp := client.DeleteDeploymentSetRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) DeleteDeploymentSetRequest(input *DeleteDeploymentSetInput) (req *request.Request, output *DeleteDeploymentSetOutput) {
	op := &request.Operation{
		Name:       opDeleteDeploymentSet,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteDeploymentSetInput{}
	}

	output = &DeleteDeploymentSetOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteDeploymentSet API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DeleteDeploymentSet for usage and error information.
func (c *ECS) DeleteDeploymentSet(input *DeleteDeploymentSetInput) (*DeleteDeploymentSetOutput, error) {
	req, out := c.DeleteDeploymentSetRequest(input)
	return out, req.Send()
}

// DeleteDeploymentSetWithContext is the same as DeleteDeploymentSet with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDeploymentSet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DeleteDeploymentSetWithContext(ctx volcengine.Context, input *DeleteDeploymentSetInput, opts ...request.Option) (*DeleteDeploymentSetOutput, error) {
	req, out := c.DeleteDeploymentSetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteDeploymentSetInput struct {
	_ struct{} `type:"structure"`

	DeploymentSetId *string `type:"string"`
}

// String returns the string representation
func (s DeleteDeploymentSetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDeploymentSetInput) GoString() string {
	return s.String()
}

// SetDeploymentSetId sets the DeploymentSetId field's value.
func (s *DeleteDeploymentSetInput) SetDeploymentSetId(v string) *DeleteDeploymentSetInput {
	s.DeploymentSetId = &v
	return s
}

type DeleteDeploymentSetOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteDeploymentSetOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDeploymentSetOutput) GoString() string {
	return s.String()
}
