// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/request"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/response"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAssociateInstancesIamRoleCommon = "AssociateInstancesIamRole"

// AssociateInstancesIamRoleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AssociateInstancesIamRoleCommon operation. The "output" return
// value will be populated with the AssociateInstancesIamRoleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AssociateInstancesIamRoleCommon Request to send the API call to the service.
// the "output" return value is not valid until after AssociateInstancesIamRoleCommon Send returns without error.
//
// See AssociateInstancesIamRoleCommon for more information on using the AssociateInstancesIamRoleCommon
// API call, and error handling.
//
//	// Example sending a request using the AssociateInstancesIamRoleCommonRequest method.
//	req, resp := client.AssociateInstancesIamRoleCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) AssociateInstancesIamRoleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAssociateInstancesIamRoleCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// AssociateInstancesIamRoleCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation AssociateInstancesIamRoleCommon for usage and error information.
func (c *ECS) AssociateInstancesIamRoleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AssociateInstancesIamRoleCommonRequest(input)
	return out, req.Send()
}

// AssociateInstancesIamRoleCommonWithContext is the same as AssociateInstancesIamRoleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AssociateInstancesIamRoleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) AssociateInstancesIamRoleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AssociateInstancesIamRoleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAssociateInstancesIamRole = "AssociateInstancesIamRole"

// AssociateInstancesIamRoleRequest generates a "volcengine/request.Request" representing the
// client's request for the AssociateInstancesIamRole operation. The "output" return
// value will be populated with the AssociateInstancesIamRoleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AssociateInstancesIamRoleCommon Request to send the API call to the service.
// the "output" return value is not valid until after AssociateInstancesIamRoleCommon Send returns without error.
//
// See AssociateInstancesIamRole for more information on using the AssociateInstancesIamRole
// API call, and error handling.
//
//	// Example sending a request using the AssociateInstancesIamRoleRequest method.
//	req, resp := client.AssociateInstancesIamRoleRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *ECS) AssociateInstancesIamRoleRequest(input *AssociateInstancesIamRoleInput) (req *request.Request, output *AssociateInstancesIamRoleOutput) {
	op := &request.Operation{
		Name:       opAssociateInstancesIamRole,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AssociateInstancesIamRoleInput{}
	}

	output = &AssociateInstancesIamRoleOutput{}
	req = c.newRequest(op, input, output)

	return
}

// AssociateInstancesIamRole API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation AssociateInstancesIamRole for usage and error information.
func (c *ECS) AssociateInstancesIamRole(input *AssociateInstancesIamRoleInput) (*AssociateInstancesIamRoleOutput, error) {
	req, out := c.AssociateInstancesIamRoleRequest(input)
	return out, req.Send()
}

// AssociateInstancesIamRoleWithContext is the same as AssociateInstancesIamRole with the addition of
// the ability to pass a context and additional request options.
//
// See AssociateInstancesIamRole for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) AssociateInstancesIamRoleWithContext(ctx volcengine.Context, input *AssociateInstancesIamRoleInput, opts ...request.Option) (*AssociateInstancesIamRoleOutput, error) {
	req, out := c.AssociateInstancesIamRoleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AssociateInstancesIamRoleInput struct {
	_ struct{} `type:"structure"`

	IamRoleName *string `type:"string"`

	InstanceIds []*string `type:"list"`
}

// String returns the string representation
func (s AssociateInstancesIamRoleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateInstancesIamRoleInput) GoString() string {
	return s.String()
}

// SetIamRoleName sets the IamRoleName field's value.
func (s *AssociateInstancesIamRoleInput) SetIamRoleName(v string) *AssociateInstancesIamRoleInput {
	s.IamRoleName = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *AssociateInstancesIamRoleInput) SetInstanceIds(v []*string) *AssociateInstancesIamRoleInput {
	s.InstanceIds = v
	return s
}

type AssociateInstancesIamRoleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OperationDetails []*OperationDetailForAssociateInstancesIamRoleOutput `type:"list"`
}

// String returns the string representation
func (s AssociateInstancesIamRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateInstancesIamRoleOutput) GoString() string {
	return s.String()
}

// SetOperationDetails sets the OperationDetails field's value.
func (s *AssociateInstancesIamRoleOutput) SetOperationDetails(v []*OperationDetailForAssociateInstancesIamRoleOutput) *AssociateInstancesIamRoleOutput {
	s.OperationDetails = v
	return s
}

type ErrorForAssociateInstancesIamRoleOutput struct {
	_ struct{} `type:"structure"`

	Code *string `type:"string"`

	Message *string `type:"string"`
}

// String returns the string representation
func (s ErrorForAssociateInstancesIamRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForAssociateInstancesIamRoleOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForAssociateInstancesIamRoleOutput) SetCode(v string) *ErrorForAssociateInstancesIamRoleOutput {
	s.Code = &v
	return s
}

// SetMessage sets the Message field's value.
func (s *ErrorForAssociateInstancesIamRoleOutput) SetMessage(v string) *ErrorForAssociateInstancesIamRoleOutput {
	s.Message = &v
	return s
}

type OperationDetailForAssociateInstancesIamRoleOutput struct {
	_ struct{} `type:"structure"`

	Error *ErrorForAssociateInstancesIamRoleOutput `type:"structure"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s OperationDetailForAssociateInstancesIamRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OperationDetailForAssociateInstancesIamRoleOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *OperationDetailForAssociateInstancesIamRoleOutput) SetError(v *ErrorForAssociateInstancesIamRoleOutput) *OperationDetailForAssociateInstancesIamRoleOutput {
	s.Error = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *OperationDetailForAssociateInstancesIamRoleOutput) SetInstanceId(v string) *OperationDetailForAssociateInstancesIamRoleOutput {
	s.InstanceId = &v
	return s
}
