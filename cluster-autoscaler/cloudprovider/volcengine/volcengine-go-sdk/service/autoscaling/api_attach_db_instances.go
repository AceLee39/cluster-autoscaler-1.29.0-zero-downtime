// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package autoscaling

import (
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/request"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/response"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAttachDBInstancesCommon = "AttachDBInstances"

// AttachDBInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AttachDBInstancesCommon operation. The "output" return
// value will be populated with the AttachDBInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AttachDBInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after AttachDBInstancesCommon Send returns without error.
//
// See AttachDBInstancesCommon for more information on using the AttachDBInstancesCommon
// API call, and error handling.
//
//	// Example sending a request using the AttachDBInstancesCommonRequest method.
//	req, resp := client.AttachDBInstancesCommonRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *AUTOSCALING) AttachDBInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAttachDBInstancesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// AttachDBInstancesCommon API operation for AUTO_SCALING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AUTO_SCALING's
// API operation AttachDBInstancesCommon for usage and error information.
func (c *AUTOSCALING) AttachDBInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AttachDBInstancesCommonRequest(input)
	return out, req.Send()
}

// AttachDBInstancesCommonWithContext is the same as AttachDBInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AttachDBInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) AttachDBInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AttachDBInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachDBInstances = "AttachDBInstances"

// AttachDBInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the AttachDBInstances operation. The "output" return
// value will be populated with the AttachDBInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AttachDBInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after AttachDBInstancesCommon Send returns without error.
//
// See AttachDBInstances for more information on using the AttachDBInstances
// API call, and error handling.
//
//	// Example sending a request using the AttachDBInstancesRequest method.
//	req, resp := client.AttachDBInstancesRequest(params)
//
//	err := req.Send()
//	if err == nil { // resp is now filled
//	    fmt.Println(resp)
//	}
func (c *AUTOSCALING) AttachDBInstancesRequest(input *AttachDBInstancesInput) (req *request.Request, output *AttachDBInstancesOutput) {
	op := &request.Operation{
		Name:       opAttachDBInstances,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AttachDBInstancesInput{}
	}

	output = &AttachDBInstancesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// AttachDBInstances API operation for AUTO_SCALING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AUTO_SCALING's
// API operation AttachDBInstances for usage and error information.
func (c *AUTOSCALING) AttachDBInstances(input *AttachDBInstancesInput) (*AttachDBInstancesOutput, error) {
	req, out := c.AttachDBInstancesRequest(input)
	return out, req.Send()
}

// AttachDBInstancesWithContext is the same as AttachDBInstances with the addition of
// the ability to pass a context and additional request options.
//
// See AttachDBInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) AttachDBInstancesWithContext(ctx volcengine.Context, input *AttachDBInstancesInput, opts ...request.Option) (*AttachDBInstancesOutput, error) {
	req, out := c.AttachDBInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AttachDBInstancesInput struct {
	_ struct{} `type:"structure"`

	DBInstanceIds []*string `type:"list"`

	ForceAttach *bool `type:"boolean"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s AttachDBInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachDBInstancesInput) GoString() string {
	return s.String()
}

// SetDBInstanceIds sets the DBInstanceIds field's value.
func (s *AttachDBInstancesInput) SetDBInstanceIds(v []*string) *AttachDBInstancesInput {
	s.DBInstanceIds = v
	return s
}

// SetForceAttach sets the ForceAttach field's value.
func (s *AttachDBInstancesInput) SetForceAttach(v bool) *AttachDBInstancesInput {
	s.ForceAttach = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *AttachDBInstancesInput) SetScalingGroupId(v string) *AttachDBInstancesInput {
	s.ScalingGroupId = &v
	return s
}

type AttachDBInstancesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s AttachDBInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachDBInstancesOutput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *AttachDBInstancesOutput) SetScalingGroupId(v string) *AttachDBInstancesOutput {
	s.ScalingGroupId = &v
	return s
}
